#!/usr/bin/env bash
nmcli con show --active | tee screen.log
nmcli device disconnect 28:C7:09:9D:C8:5E
if
  grep -w "30a8a6b3-683b-4fd5-94c1-d155f1841120" screen.log # read log file for active connection (wifi)
then
  notify-send "WIFI is enabled"
elif
  ping -c1 google.com >/dev/null # check for actual connection
then
  {
  notify-send "WIFI connected"
  nmcli device disconnect 28:C7:09:9D:C8:5E # disconnect hotspot (because don't need)
  exit
}
else
  notify-send "Enabling WIFI"
  nmcli radio wifi on            # enabling wifi
  nmcli device disconnect 28:C7:09:9D:C8:5E  # make sure we dont proc the hotspot, and keep it off
  notify-send "Please wait"
  sleep 7 # wait for wifi to enable and connect
fi

if
  ping -c1 google.com >/dev/null # check if it connects
then
  {
  Notify-send "WIFI connected successfully"
  nmcli device disconnect 28:C7:09:9D:C8:5E # another redundancy
  exit
}
else
  bluetoothctl connect 28:C7:09:9D:C8:5E # if the wifi fails, we make sure bluetooth is on
  notify-send "No WIFI available - Enabling Hotspot"
  nmcli radio wifi off
  nmcli device connect 28:C7:09:9D:C8:5E # and connect to it's hotspot
  sleep 3 # wait for hotspot to init
fi
if
  ping -c1 google.com >/dev/null # check connection
then
  {
  notify-send "Connection successful"
  exit
}
else
  notify-send "No connections are available - bluetooth may be disabled"
  nmcli device disconnect 28:C7:09:9D:C8:5E # disable because it didn't work
fi
